<?php

class TestableBufferAbstract extends PAF_Buffer_Abstract
{

    public function flush()
    {
        
    }

    public function get()
    {
        
    }

    public function pull($length = NULL, $piece = PAF_Buffer_Interface::LINE)
    {
        
    }

    public function push($content)
    {
        
    }

    protected function _init()
    {
        
    }

}

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-08 at 20:10:06.
 */
class PAF_Buffer_AbstractTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var PAF_Buffer_Abstract
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new TestableBufferAbstract();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }
    
    public function testConstructor()
    {
        $this->assertInstanceOf('PAF_Buffer_Abstract', $this->object);
    }

    /**
     * @covers PAF_Buffer_Abstract::getId
     */
    public function testGetId()
    {
        $this->assertEquals($this->object->id, $this->object->getId());
    }

    /**
     * @covers PAF_Buffer_Abstract::__get
     */
    public function testId()
    {
        $ids = array();

        for ($i = 0; $i < 10; $i++)
        {
            $object = new PAF_Buffer_Memory();
            $id = $object->id;
            $this->assertNotContains($id, $ids);
            $ids[] = $id;
        }
    }

    /**
     * @covers PAF_Buffer_Abstract::__get
     */
    public function test__get()
    {
        $this->setExpectedException('PAF_Exception_NoSuchProperty');
        $this->object->unexistingProperty;
    }

}
